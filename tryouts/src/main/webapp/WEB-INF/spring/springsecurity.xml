<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">


	<http auto-config="true" use-expressions="true"
		access-denied-page="/forbidden">
		<headers></headers>
		<csrf />
		<intercept-url pattern="/forbidden" access="permitAll" requires-channel="https"/>
		<intercept-url pattern="/login*" access="permitAll" requires-channel="https"/>
		<intercept-url pattern="/logout*" access="permitAll" requires-channel="https"/>
		<intercept-url pattern="/checkLoginOTP" access="isFullyAuthenticated()" requires-channel="https"/>
		
		<intercept-url pattern="/" access="isFullyAuthenticated()" requires-channel="https"/>
		<intercept-url pattern="/changePassForm" access="isFullyAuthenticated()" requires-channel="https"/>
		<intercept-url pattern="/changePass" access="isFullyAuthenticated()" requires-channel="https"/>
		<intercept-url pattern="/manager/**"
			access="hasPermission(#user, 'ROLE_MANAGER;*')" requires-channel="https"/>
		<intercept-url pattern="/resources/**" access="permitAll" requires-channel="https"/>
		<intercept-url pattern="/official/**"
			access="hasPermission(#user, 'ROLE_OFFICIAL;*')" requires-channel="https"/>
		<intercept-url pattern="/secured/**"
			access="hasPermission(#user, 'ROLE_ADMIN;DEPT_SYSADMIN')" requires-channel="https"/>
		<intercept-url pattern="/sysadmin/**"
			access="hasPermission(#user, 'ROLE_ADMIN;DEPT_SYSADMIN')" requires-channel="https"/>
		<intercept-url pattern="/hrdept/**"
			access="hasPermission(#user, '*;DEPT_HR')" requires-channel="https"/>
		<intercept-url pattern="/sales/**"
			access="hasPermission(#user, '*;DEPT_SALES')" requires-channel="https"/>
		<intercept-url pattern="/ext/**"
			access="hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')" requires-channel="https"/>
		<intercept-url pattern="/transaction/**"
			access="hasPermission(#user, '*;DEPT_TRANS:ROLE_OFFICIAL;*')" requires-channel="https"/>
		<intercept-url pattern="/**" access="denyAll" />

		<session-management>
			<concurrency-control max-sessions="1"
				error-if-maximum-exceeded="true" />
		</session-management>
		<form-login login-page="/login" default-target-url="/"
			authentication-failure-url="/loginerror" />
		<logout logout-success-url="/login" invalidate-session="true"
			delete-cookies="JSESSIONID" />

		<!-- <custom-filter ref="captchaCaptureFilter" before="FORM_LOGIN_FILTER" />
		<custom-filter ref="captchaVerifierFilter" after="FORM_LOGIN_FILTER" /> -->

		<expression-handler ref="webexpressionHandler" />
	</http>

	<global-method-security pre-post-annotations="enabled">
		<expression-handler ref="expressionHandler" />
	</global-method-security>
	<beans:bean id="webexpressionHandler"
		class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler">
		<beans:property name="permissionEvaluator" ref="permissionEvaluator" />
	</beans:bean>
	<beans:bean id="expressionHandler"
		class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<beans:property name="permissionEvaluator" ref="permissionEvaluator" />
	</beans:bean>

	<beans:bean id="permissionEvaluator"
		class="com.sundevil.security.BankPermissionEvaluator">
	</beans:bean>

	<!-- For capturing CAPTCHA fields -->
	<!-- <beans:bean id="captchaCaptureFilter" class="com.sundevil.filter.CaptchaCaptureFilter">
	</beans:bean> -->

	<!-- For verifying CAPTCHA fields Private key is assigned by the reCATPCHA 
		service -->
	<!-- <beans:bean id="captchaVerifierFilter" class="com.sundevil.filter.CaptchaVerifierFilter"
		p:useProxy="false" p:proxyPort="" p:proxyHost="" p:failureUrl="/j_spring_security_logout"
		p:captchaCaptureFilter-ref="captchaCaptureFilter" p:privateKey="6Ld4RekSAAAAAGCe5sAo87jkuHE21Hfqg1WAqLpf">
	</beans:bean> -->


	<authentication-manager alias="authenticationManager"
		erase-credentials="false">
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"

				users-by-username-query="
		      select username,password, enabled 
		      from users where username=?"

				authorities-by-username-query="
		      select u.username, r.authority from users u, roles r 
		      where r.role_id = u.role_id and u.username =?  " />

			<password-encoder ref="encoder" />
		</authentication-provider>


		
	</authentication-manager>
	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
</beans:beans>